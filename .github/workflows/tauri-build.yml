name: Tauri Build

on:
  workflow_dispatch:  # 手动触发
  push:
    branches: [ main ]  # main 分支推送时触发

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Build project
        run: |
          npm run tauri build -- --target ${{ matrix.target }}
          echo "BUILD_STATUS=success" >> $GITHUB_OUTPUT
          echo "TARGET=${{ matrix.target }}" >> $GITHUB_STATE

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-${{ matrix.target }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle

  android:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-linux-android
            abi: arm64-v8a
            universal: false
          - target: armv7-linux-androideabi
            abi: armeabi-v7a
            universal: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保获取完整的提交历史

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: yes | sdkmanager --licenses

      - name: Install Android NDK
        run: sdkmanager --install "ndk;25.2.9519653"
        env:
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
          NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android
          override: true

      - name: Initialize Tauri Android
        run: |
          npm run tauri android init
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
          NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}

      - name: setup Android signing
        run: |
          cd src-tauri/gen/android
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" > keystore.properties
          echo "password=${{ secrets.ANDROID_KEY_PASSWORD }}" >> keystore.properties
          base64 -d <<< "${{ secrets.ANDROID_KEY_BASE64 }}" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=$RUNNER_TEMP/keystore.jks" >> keystore.properties
          
      - name: Build Android
        run: |
          rustup target add ${{ matrix.target }} || exit 1
          if [ "${{ matrix.universal }}" = "true" ]; then
            npm run tauri android build -- --target universal || exit 1
          else
            npm run tauri android build -- --target ${{ matrix.target }} || exit 1
          fi
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
          NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            src-tauri/gen/android/app/build/outputs/apk/universal/release/*.apk
            src-tauri/gen/android/app/build/outputs/bundle/universalRelease/*.aab

  release:
    needs: [build, android]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: Auto-generated release
          files: |
            artifacts/tauri-build-*/**/*.AppImage
            artifacts/tauri-build-*/**/*.deb
            artifacts/tauri-build-*/**/*.rpm
            artifacts/tauri-build-*/**/*.app
            artifacts/tauri-build-*/**/*.dmg
            artifacts/tauri-build-*/**/*.msi
            artifacts/tauri-build-*/**/*.exe
            artifacts/android-build/**/*.apk
            artifacts/android-build/**/*.aab